<?php
// $Id$

/**
* Display help and module information
*/
//require_once("./appsapis.php")
//require_once("provisioning.php")
module_load_include('php', 'grupal', 'appsapis');

/**
* Valid permissions for this module
* @return array An array of valid permissions for the grupal module
*/
function grupal_perm() {
  return array('have google apps account', 'administer google apps', 'administer grupal');
} // function grupal_perm()

/**
* Display help and module information
* @param path which path of the site we're displaying help
* @param arg array that holds the current path as would be returned from arg() function
* @return help text for the path
*/
function grupal_help($path, $arg) {
  $output = '';
  switch ($path) {
    case "admin/help#grupal":
      $output = '<p>'.  t("Google Apps integrations for Drupal") .'</p>';
      break;
    case "admin/settings/grupal":
      $output = '<p>'.  t("Google Apps (http://google.com/a/)"). '</p>';
      break;
  }
  return $output;
} // function grupal_help

/**
* Menu items for this module
* @return array An array of menu items
*/
function grupal_menu() {

  $items['admin/settings/grupal'] = array(
    'title' => t('Google Apps module settings'),
	'description' => 'Configuration of Google Apps integration points',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('grupal_admin_settings'),
    'access arguments' => array('administer grupal'),
	'block callback' => 'system_admin_theme_settings',
	'file' => 'grupal.admin.inc',
   );

  return $items;
} // function grupal_menu

/**
* Handle Drupal 'user' hook events
* http://api.drupal.org/api/function/hook_user
* @param op What kind of action is being performed.
* @param edit The array of form values submitted by the user. 
* @param account The user object on which the operation is being performed.
* @param category The active category of user information being edited.
* @return depends on operation, usually none.
*/
function grupal_user($op, &$edit, &$account, $category = NULL) {
  
  $grupal_domain = variable_get('grupal_domain', '');
  $grupal_username = grupal_cleanname($account->name);

  if ($op == 'insert') {
    // Create a new account on 'insert'
  }
  if ($op == 'update') {
    // Update Google Apps details on 'update'
  }
  if ($op == 'delete') {
    // Suspend or delete user on 'delete'
  }

} // function grupal_user

/**
* Filter unsupported characters from username
* @param name Drupal username
* @return Google Apps compatible clean username
*/
function grupal_cleanname($name) {
  return eregi_replace("[^a-z0-9\.]", "", strtolower($name));
} // function grupal_cleanname
